{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Organisation fonctionnelle Organisation du projet \\crons -> cronjob de nettoyage des fichiers temporaires \\htdocs -> donn\u00e9es \u00e0 servir \\docs -> documentation Organisation du site \\ajax -> page o\u00f9 les requ\u00eates ajax sont envoy\u00e9es et trait\u00e9es \\classes -> regroupement de toutes les fonctions php utilis\u00e9es \\doc -> listes csv et xls (non utilis\u00e9es actuellement) \\lib et \\vendor -> librairies \\pages -> d\u00e9tail des pages servies \\img -> m\u00e9dias \\scripts -> fichiers javascript \\styles -> fichier css Cr\u00e9ation des pages Il y a un sous-dossier par page dans \\pages. Chaque page est construit par un controller. Ils se trouvent dans \\pages et s'appellent par example About.php. Il s'agit d'instance de la classe Page telle que d\u00e9finie dans classes/pageManagement.php Il y a une seule page index.php et la navigation se fait au travers du param\u00e8tre page pass\u00e9 en m\u00e9thode get . Le routing est fait par la static function load de la classe PageListing Le contenu statique de la page se trouve dans le fichier qui s'appelle par exemple AboutContent.php Vous pouvez mettre \u00e0 jour ce routing notamment en utilisant un framework (symfony par exemple). L'organisation des pages \u00e0 travers le param\u00e8tre get est \u00e0 \u00e9viter. Authentification Ce site utilise actuellement deux authentifications, pour les ext\u00e9s et pour les polytechniciens. Le CAS du BR fonctionne de la mani\u00e8re suivante : L'utilisateur est dirig\u00e9 vers https://cas.binets.fr/login?service=https://course-drapeau.binets.fr/?page=Connect&renew=true Il se connecte L'utilisateur est redirig\u00e9 vers https://course-drapeau.binets.fr/?page=Connect qui est une URL d\u00e9finie par le B Nous prenons alors le ticket de l'utilisateur en param\u00e8tre get et nous pouvons l'\u00e9changer contre ses informations personnelles. N'h\u00e9sitez pas \u00e0 demander plus d'infos au BR Modification du contenu Le projet du site \u00e9tait initiallement de faire un contenu modulable sans avoir \u00e0 \u00e9crire de code. L'id\u00e9e \u00e9tait de stocker les informations dans la base de donn\u00e9e dans les tables content et content_section et de modifier ces informations depuis l'espace administration pour les utilisateurs enregistr\u00e9s comme root dans la database. Ce projet n'a pas \u00e9t\u00e9 men\u00e9 jusqu'au bout. Par ailleurs il n'est pas vraiment intelligent car le site \u00e9volue beaucoup plus d'une ann\u00e9e \u00e0 l'autre que simplement une mise \u00e0 jour de contenu. N\u00e9anmoins voici comment il fonctionne: La modification du contenu du site se fait depuis l'onglet administration, accessible apr\u00e8s connexion avec un login root. Si tu \u00eates le gestionnaire de la base de donn\u00e9e, il est facile de cr\u00e9er un entr\u00e9e avec root=true dans la base. Sinon il faut contacter votre pr\u00e9d\u00e9cesseur pour qu'il tu passe les acc\u00e8s. Il est possible de modifier le contenu de chaque item, d'en cr\u00e9er de nouveau ou de les supprimer, pareil pour chaque section. Dans le code php, chaque item peut \u00eatre acc\u00e9d\u00e9 directement sur la page voulue avec $sections[num_section][num_item] o\u00f9 num_section>=1 et num_item>=0 Vous pouvez ajouter un lien dans le contenu. Comme tous les caract\u00e8res sp\u00e9ciaux sont \u00e9chapp\u00e9s, il faut utiliser une syntaxe particuli\u00e8re (je s\u00e9pare par des \"!\"). Pour faire un lien vers https://google.com avec comme valeur \"ici\" j'\u00e9cris par exemple dans mon item : Vous pouvez visiter google !lien!https://google.com!ici! et je peux continuer mon texte. Template de page Chaque page suit un mod\u00e8le d\u00e9fini par son header linksAndScripts.php , une navbar navbar.php , son footer footer.php , et \u00e9ventuellement un message d'alerte Diplay.php dans \\pages\\includes Cr\u00e9er une nouvelle page Pour cr\u00e9er une nouvelle page, il suffit de la placer dans le dossier \\pages et de remplir le tableau du fichier pageManagement.php Documenter le projet Il faut toujours bien documenter ce que vous faites dans le dossier /docs. Vous trouverez plus d'informations \u00e0 propos de mkdocs utilis\u00e9 pour cr\u00e9er la doc ici . Il suffit de modifier le index.md et d'ex\u00e9cuter mkdocs build . Lors d'un commit, la documentation est automatiquement mise \u00e0 jour.","title":"Home"},{"location":"#organisation-fonctionnelle","text":"","title":"Organisation fonctionnelle"},{"location":"#organisation-du-projet","text":"\\crons -> cronjob de nettoyage des fichiers temporaires \\htdocs -> donn\u00e9es \u00e0 servir \\docs -> documentation","title":"Organisation du projet"},{"location":"#organisation-du-site","text":"\\ajax -> page o\u00f9 les requ\u00eates ajax sont envoy\u00e9es et trait\u00e9es \\classes -> regroupement de toutes les fonctions php utilis\u00e9es \\doc -> listes csv et xls (non utilis\u00e9es actuellement) \\lib et \\vendor -> librairies \\pages -> d\u00e9tail des pages servies \\img -> m\u00e9dias \\scripts -> fichiers javascript \\styles -> fichier css","title":"Organisation du site"},{"location":"#creation-des-pages","text":"Il y a un sous-dossier par page dans \\pages. Chaque page est construit par un controller. Ils se trouvent dans \\pages et s'appellent par example About.php. Il s'agit d'instance de la classe Page telle que d\u00e9finie dans classes/pageManagement.php Il y a une seule page index.php et la navigation se fait au travers du param\u00e8tre page pass\u00e9 en m\u00e9thode get . Le routing est fait par la static function load de la classe PageListing Le contenu statique de la page se trouve dans le fichier qui s'appelle par exemple AboutContent.php Vous pouvez mettre \u00e0 jour ce routing notamment en utilisant un framework (symfony par exemple). L'organisation des pages \u00e0 travers le param\u00e8tre get est \u00e0 \u00e9viter.","title":"Cr\u00e9ation des pages"},{"location":"#authentification","text":"Ce site utilise actuellement deux authentifications, pour les ext\u00e9s et pour les polytechniciens. Le CAS du BR fonctionne de la mani\u00e8re suivante : L'utilisateur est dirig\u00e9 vers https://cas.binets.fr/login?service=https://course-drapeau.binets.fr/?page=Connect&renew=true Il se connecte L'utilisateur est redirig\u00e9 vers https://course-drapeau.binets.fr/?page=Connect qui est une URL d\u00e9finie par le B Nous prenons alors le ticket de l'utilisateur en param\u00e8tre get et nous pouvons l'\u00e9changer contre ses informations personnelles. N'h\u00e9sitez pas \u00e0 demander plus d'infos au BR","title":"Authentification"},{"location":"#modification-du-contenu","text":"Le projet du site \u00e9tait initiallement de faire un contenu modulable sans avoir \u00e0 \u00e9crire de code. L'id\u00e9e \u00e9tait de stocker les informations dans la base de donn\u00e9e dans les tables content et content_section et de modifier ces informations depuis l'espace administration pour les utilisateurs enregistr\u00e9s comme root dans la database. Ce projet n'a pas \u00e9t\u00e9 men\u00e9 jusqu'au bout. Par ailleurs il n'est pas vraiment intelligent car le site \u00e9volue beaucoup plus d'une ann\u00e9e \u00e0 l'autre que simplement une mise \u00e0 jour de contenu. N\u00e9anmoins voici comment il fonctionne: La modification du contenu du site se fait depuis l'onglet administration, accessible apr\u00e8s connexion avec un login root. Si tu \u00eates le gestionnaire de la base de donn\u00e9e, il est facile de cr\u00e9er un entr\u00e9e avec root=true dans la base. Sinon il faut contacter votre pr\u00e9d\u00e9cesseur pour qu'il tu passe les acc\u00e8s. Il est possible de modifier le contenu de chaque item, d'en cr\u00e9er de nouveau ou de les supprimer, pareil pour chaque section. Dans le code php, chaque item peut \u00eatre acc\u00e9d\u00e9 directement sur la page voulue avec $sections[num_section][num_item] o\u00f9 num_section>=1 et num_item>=0 Vous pouvez ajouter un lien dans le contenu. Comme tous les caract\u00e8res sp\u00e9ciaux sont \u00e9chapp\u00e9s, il faut utiliser une syntaxe particuli\u00e8re (je s\u00e9pare par des \"!\"). Pour faire un lien vers https://google.com avec comme valeur \"ici\" j'\u00e9cris par exemple dans mon item : Vous pouvez visiter google !lien!https://google.com!ici! et je peux continuer mon texte.","title":"Modification du contenu"},{"location":"#template-de-page","text":"Chaque page suit un mod\u00e8le d\u00e9fini par son header linksAndScripts.php , une navbar navbar.php , son footer footer.php , et \u00e9ventuellement un message d'alerte Diplay.php dans \\pages\\includes","title":"Template de page"},{"location":"#creer-une-nouvelle-page","text":"Pour cr\u00e9er une nouvelle page, il suffit de la placer dans le dossier \\pages et de remplir le tableau du fichier pageManagement.php","title":"Cr\u00e9er une nouvelle page"},{"location":"#documenter-le-projet","text":"Il faut toujours bien documenter ce que vous faites dans le dossier /docs. Vous trouverez plus d'informations \u00e0 propos de mkdocs utilis\u00e9 pour cr\u00e9er la doc ici . Il suffit de modifier le index.md et d'ex\u00e9cuter mkdocs build . Lors d'un commit, la documentation est automatiquement mise \u00e0 jour.","title":"Documenter le projet"},{"location":"func/","text":"","title":"Fonctions"},{"location":"quickstart/","text":"Utiliser le site Pour avoir une installation locale fonctionnelle : Pr\u00e9requis Git sudo apt-get install git Installation Cloner le dossier git clone https://github.com/pe712/Modal-WEB Configuration serveur Il faut un serveur permettant d'ex\u00e9cuter un script php (apache ou nginx par exemple) avec une connexion s\u00e9curis\u00e9e SSL. Sur windows regarder (XAMP ou WAMP) ou alors si vous savez utiliser docker ce peut \u00eatre une option. Vous pouvez aussi sur windows regarder le WSL pour simuler un environnement unix. Il faut ensuite modifier le php.ini pour set upload_max_filesize = 4M max_file_uploads = 100 Cela permet d'upload sur le site toutes les traces GPX. Pour ce site, des librairies php on \u00e9t\u00e9 utilis\u00e9s et t\u00e9l\u00e9charg\u00e9es \u00e0 l'aide de composer. Il peut \u00eatre utile de setup composer sur le serveur si jamais des mises \u00e0 jour sont n\u00e9c\u00e9ssaires dans le futur. Base de donn\u00e9es N'importe quelle base de donn\u00e9es relationnelle convient. Vous trouverez ici la database \u00e0 un stade donn\u00e9 du projet (il est possible que cet exemple soit obsol\u00e8te). Pour configurer la base de donn\u00e9e il faut cr\u00e9er un fichier config.php et le placer \u00e0 la source du projet (\u00e0 c\u00f4t\u00e9 de htdocs). Il est ainsi accessible par les scripts php mais pas par l'utilisateur. <?php $db = \"ma base de donn\u00e9e\"; $host = \"h\u00e9bergeur de la database, par d\u00e9faut localhost\"; $dsn = \"mysql:dbname=$db; host=$host\"; $user = \"mon username\"; $password = \"mon mot de passe\"; ?> Crons Il faut d\u00e9finir cronjob.sh comme cronjob sur le serveur */15 * * * * /hosting/www/courseaudrapeau/crons/cronjob.sh Par o\u00f9 commencer Si vous n'avez pas d'id\u00e9es, il y a un TODO.txt","title":"Quickstart"},{"location":"quickstart/#utiliser-le-site","text":"Pour avoir une installation locale fonctionnelle :","title":"Utiliser le site"},{"location":"quickstart/#prerequis","text":"Git sudo apt-get install git","title":"Pr\u00e9requis"},{"location":"quickstart/#installation","text":"Cloner le dossier git clone https://github.com/pe712/Modal-WEB","title":"Installation"},{"location":"quickstart/#configuration-serveur","text":"Il faut un serveur permettant d'ex\u00e9cuter un script php (apache ou nginx par exemple) avec une connexion s\u00e9curis\u00e9e SSL. Sur windows regarder (XAMP ou WAMP) ou alors si vous savez utiliser docker ce peut \u00eatre une option. Vous pouvez aussi sur windows regarder le WSL pour simuler un environnement unix. Il faut ensuite modifier le php.ini pour set upload_max_filesize = 4M max_file_uploads = 100 Cela permet d'upload sur le site toutes les traces GPX. Pour ce site, des librairies php on \u00e9t\u00e9 utilis\u00e9s et t\u00e9l\u00e9charg\u00e9es \u00e0 l'aide de composer. Il peut \u00eatre utile de setup composer sur le serveur si jamais des mises \u00e0 jour sont n\u00e9c\u00e9ssaires dans le futur.","title":"Configuration serveur"},{"location":"quickstart/#base-de-donnees","text":"N'importe quelle base de donn\u00e9es relationnelle convient. Vous trouverez ici la database \u00e0 un stade donn\u00e9 du projet (il est possible que cet exemple soit obsol\u00e8te). Pour configurer la base de donn\u00e9e il faut cr\u00e9er un fichier config.php et le placer \u00e0 la source du projet (\u00e0 c\u00f4t\u00e9 de htdocs). Il est ainsi accessible par les scripts php mais pas par l'utilisateur. <?php $db = \"ma base de donn\u00e9e\"; $host = \"h\u00e9bergeur de la database, par d\u00e9faut localhost\"; $dsn = \"mysql:dbname=$db; host=$host\"; $user = \"mon username\"; $password = \"mon mot de passe\"; ?>","title":"Base de donn\u00e9es"},{"location":"quickstart/#crons","text":"Il faut d\u00e9finir cronjob.sh comme cronjob sur le serveur */15 * * * * /hosting/www/courseaudrapeau/crons/cronjob.sh","title":"Crons"},{"location":"quickstart/#par-ou-commencer","text":"Si vous n'avez pas d'id\u00e9es, il y a un TODO.txt","title":"Par o\u00f9 commencer"}]}